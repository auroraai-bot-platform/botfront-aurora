describe('Filters', () => {
    beforeEach(() => {
        cy.login()
        cy.deleteProject('bf')
        cy.createProject('bf', 'My Project', 'en')
        cy.visit('/project/bf/incoming')
    })

    afterEach(() => {
        cy.deleteProject('bf')
    })

    it('keep the filter state between hide and reveal', () => {
        cy.dataCy('conversations').click()
        cy.dataCy('toggle-filters').click()
        cy.get('.accordion.ui > .content').should('not.have.class', 'active')
        cy.dataCy('toggle-filters').click()
        cy.get('.accordion.ui > .content').should('have.class', 'active')
        cy.dataCy('length-filter').find('input').type('5')
        cy.dataCy('confidence-filter').find('input').type('75')
        cy.addConversationEventFilter('intent', 'test')
        cy.dataCy('toggle-filters').click()
        cy.get('.accordion.ui > .content').should('not.have.class', 'active')
        cy.dataCy('toggle-filters').click()
        cy.get('.accordion.ui > .content').should('have.class', 'active')
        cy.dataCy('length-filter').find('input').should('have.value', '5')
        cy.dataCy('confidence-filter').find('input').should('have.value', '75')
        cy.dataCy('sequence-container').should('include.text', 'test')
    })

    it('reset filters', () => {
        cy.dataCy('conversations').click()
        cy.get('.accordion.ui > .content').should('have.class', 'active')
        cy.dataCy('length-filter').find('input').type('5')
        cy.dataCy('confidence-filter').find('input').type('75')
        cy.addConversationEventFilter('intent', 'test')
        cy.dataCy('reset-filter').click()
        cy.dataCy('length-filter').find('input').should('have.value', '')
        cy.dataCy('confidence-filter').find('input').should('have.value', '')
        cy.dataCy('sequence-container').find('.label').should('not.exist')
    })

    it('filter by length', () => {
        cy.addConversationFromTemplate('bf', 'len_3', 'len3')
        cy.addConversationFromTemplate('bf', 'len_1', 'len1')
        cy.dataCy('conversations').click()
        cy.dataCy('length-filter').find('input').type('2{enter}{esc}')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'len3')
        cy.dataCy('conversation-item').should('not.have.text', 'len1')
        cy.dataCy('length-filter').find('.filter-dropdown').click().find('div').contains('â‰¤').click()
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'len1')
        cy.dataCy('conversation-item').should('not.have.text', 'len3')
        cy.dataCy('length-filter').find('input').clear()
        cy.dataCy('length-filter').find('input').type('3')
        cy.dataCy('length-filter').find('.filter-dropdown').click().find('div').contains('=').click()
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'len3')
        cy.dataCy('conversation-item').should('not.have.text', 'len1')
        cy.dataCy('length-filter').find('input').type('33')
        cy.dataCy('apply-filters').click()
        cy.dataCy('no-conv').should('exist')
    })

    it('filter by confidence', () => {
        cy.addConversationFromTemplate('bf', 'conf_70', 'conf70')
        cy.addConversationFromTemplate('bf', 'conf_90', 'conf90')
        cy.dataCy('conversations').click()
        cy.dataCy('confidence-filter').find('input').type('75')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'conf70')
        cy.dataCy('conversation-item').should('not.have.text', 'conf90')
    })

    it('filter by action', () => {
        // both conversation that have been added also gave an action_dummy
        cy.addConversationFromTemplate('bf', 'action_test', 'test')
        cy.addConversationFromTemplate('bf', 'action_autre', 'autre')
        cy.dataCy('conversations').click()
        cy.addConversationEventFilter('action', 'action_test')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'test')
        cy.dataCy('conversation-item').should('not.have.text', 'autre')
        cy.dataCy('intents-actions-filter').click().find('.label').contains('action_test').find('.icon.delete').click()
        cy.dataCy('apply-filters').click()
        cy.addConversationEventFilter('action', 'action_autre')
        cy.addConversationEventFilter('action', 'action_dummy')
        cy.dataCy('conversation-item').should('have.text', 'autretest')
        cy.dataCy('intents-actions-filter').find('.and-or-order').click().find('div').contains('And').click()
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'autre')
        cy.dataCy('conversation-item').should('not.have.text', 'test')
        cy.dataCy('sequence-container').should('have.text', ' action_autreaction_dummy')
    })

    it('filter by intent', () => {
        // both conversation that have been added also gave an intent_dummy
        cy.addConversationFromTemplate('bf', 'intent_test', 'test')
        cy.addConversationFromTemplate('bf', 'intent_autre', 'autre')
        cy.dataCy('conversations').click()
        cy.addConversationEventFilter('intent', 'intent_test')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'test')
        cy.dataCy('conversation-item').should('not.have.text', 'autre')
        cy.dataCy('intents-actions-filter').click().find('.label').contains('intent_test').find('.icon').click()
        cy.addConversationEventFilter('intent', 'intent_autre')
        cy.addConversationEventFilter('intent', 'intent_dummy')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'autretest')
        cy.dataCy('intents-actions-filter').find('.and-or-order').click().find('div').contains('And').click()
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'autre')
        cy.dataCy('conversation-item').should('not.have.text', 'test')
        cy.dataCy('sequence-container').should('have.text', ' intent_autreintent_dummy')
    })

    it('filter in order', () => {
        // both conversation that have been added also gave an intent_dummy
        cy.addConversationFromTemplate('bf', 'intent_test', 'test')
        cy.addConversationFromTemplate('bf', 'intent_autre', 'autre')
        cy.dataCy('conversations').click()
        cy.dataCy('intents-actions-filter').find('.and-or-order').click().find('div').contains('In order').click()
        cy.addConversationEventFilter('intent', 'intent_test')
        cy.addConversationEventFilter('intent', 'intent_dummy')
        cy.dataCy('apply-filters').click()
        cy.dataCy('sequence-container').should('have.text', ' intent_testintent_dummy')
        cy.dataCy('conversation-item').should('have.text', 'test')
        cy.dataCy('conversation-item').should('not.have.text', 'autre')
        cy.dataCy('apply-filters').click()
    })

    it('filter in order with exlusion', () => {
        // both conversation that have been added also gave an intent_dummy
        cy.addConversationFromTemplate('bf', 'intent_test', 'test')
        cy.addConversationFromTemplate('bf', 'intent_autre', 'autre')
        cy.addConversationFromTemplate('bf', 'intent_test_and_autre', 'autretest')
        cy.dataCy('conversations').click()
        cy.dataCy('intents-actions-filter').find('.and-or-order').click().find('div').contains('In order').click()
        cy.addConversationEventFilter('intent', 'intent_test')
        cy.addConversationEventFilter('intent', 'intent_dummy')
        cy.addConversationEventFilter('action', 'utter_autre')
        cy.dataCy('sequence-step-2').click()
        cy.dataCy('apply-filters').click()
        cy.dataCy('sequence-container').should('have.text', ' intent_testintent_dummyutter_autre')
        cy.dataCy('conversation-item').should('have.text', 'test')
        cy.dataCy('conversation-item').should('not.have.text', 'autretest')
        cy.dataCy('conversation-item').should('not.have.text', 'autre')
    })


    it('filter by date', () => {
        // cy.importProject('bf', 'filter_by_date_data.json')
        cy.addConversationFromTemplate('bf', 'default', 'oct', { startTime: 1571097600 }) // 15th October 2019
        cy.addConversationFromTemplate('bf', 'default', 'nov', { startTime: 1573776000 }) // 15th November 2019
        cy.dataCy('conversations').click()
        cy.pickDateRange(0, '1/10/2019', '30/11/2019')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.length', 2)
        cy.pickDateRange(0, '1/11/2019', '30/11/2019')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversations').should('exist')
        cy.dataCy('conversation-item').should('have.text', 'nov')
        cy.dataCy('conversation-item').should('have.length', 1)
    })

    it('filter by userId', () => {
        cy.addConversationFromTemplate('bf', 'uid_aaa', 'uidaaa')
        cy.addConversationFromTemplate('bf', 'uid_bbb', 'uidbbb')
        cy.dataCy('conversations').click()
        cy.dataCy('id-filter').find('input').type('aaa')

        cy.dataCy('apply-filters').click()
        cy.dataCy('id-filter').find('input').should('have.value', 'aaa')
        cy.dataCy('conversation-item').should('have.text', 'uidaaa')
        cy.dataCy('conversation-item').should('not.have.text', 'uidbbb')
    })

    it('filter by duration', () => {
        cy.addConversationFromTemplate('bf', 'default', 'duration10', { duration: 10 })
        cy.addConversationFromTemplate('bf', 'default', 'duration20', { duration: 20 })
        cy.dataCy('conversations').click()
        cy.dataCy('duration-filter-from').find('input').type('15')
        cy.dataCy('duration-filter-to').find('input').type('25')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'duration20')
        cy.dataCy('conversation-item').should('have.length', 1)
        cy.dataCy('duration-filter-to').find('input').clear().type('15')
        cy.dataCy('duration-filter-from').find('input').clear()
        cy.dataCy('apply-filters').click()
        cy.dataCy('duration-filter-to').find('input').should('have.value', '15')
        cy.dataCy('conversation-item').should('have.text', 'duration10')
        cy.dataCy('conversation-item').should('have.length', 1)
        cy.dataCy('duration-filter-to').find('input').clear()
        cy.dataCy('duration-filter-from').find('input').clear().type('15')
        cy.dataCy('apply-filters').click()
        cy.dataCy('duration-filter-from').find('input').should('have.value', '15')
        cy.dataCy('conversation-item').should('have.text', 'duration20')
        cy.dataCy('conversation-item').should('have.length', 1)
    })

    it('should be possible to filter with multiple constraints at once', () => {
        cy.addConversationFromTemplate('bf', 'action_test', 'test')
        cy.addConversationFromTemplate('bf', 'action_autre', 'autre')
        cy.addConversationFromTemplate('bf', 'conf_90', 'conf90')
        cy.addConversationFromTemplate('bf', 'conf_70', 'conf70')
        cy.addConversationFromTemplate('bf', 'len_3', 'len3')
        cy.addConversationFromTemplate('bf', 'len_1', 'len1')
        cy.addConversationFromTemplate('bf', 'len_1', 'len1')
        cy.addConversationFromTemplate('bf', 'len_3_conf_70_action_test', 'pass_all')

        cy.dataCy('conversations').click()
        cy.addConversationEventFilter('action', 'action_test')

        cy.dataCy('confidence-filter').find('input').type('75')
        cy.dataCy('length-filter').find('input').type('2{enter}{esc}')
        cy.dataCy('apply-filters').click()
        cy.dataCy('conversation-item').should('have.text', 'pass_all')
    })

    it('filter by a single user after clicking on a userId in the conversation viewer', () => {
        cy.addConversationFromTemplate('bf', 'uid_aaa', 'uidaaa')
        cy.addConversationFromTemplate('bf', 'uid_bbb', 'uidbbb')
        cy.dataCy('conversations').click()
        cy.dataCy('conversation-item').contains('uidaaa').click()
        cy.dataCy('utterance-author').contains('aaa').click()
        cy.dataCy('filter-by-user-id-modal').find('.ui.primary.button').click()
        cy.dataCy('conversation-item').should('have.length', 1)
        cy.dataCy('conversation-item').should('have.text', 'uidaaa')
        cy.dataCy('conversation-item').should('not.have.text', 'uidbbb')
        cy.dataCy('id-filter').find('input').should('have.value', 'aaa')
    })

    it('persist filters after a page refresh', () => {
        cy.addConversationFromTemplate('bf', 'intent_test', 'test')
        cy.dataCy('conversations').click()
        cy.dataCy('id-filter').find('input').type('test')
        cy.pickDateRange(0, '1/10/2019', '30/11/2019')
        cy.dataCy('duration-filter-to').find('input').type('10')
        cy.dataCy('length-filter').find('input').type('2')
        cy.dataCy('length-filter').find('.filter-dropdown').click()
        cy.dataCy('length-filter').find('span.text').contains('â‰¤').click()
        cy.dataCy('confidence-filter').find('input').type('50')
        cy.addConversationEventFilter('action', 'action_test')
        cy.addConversationEventFilter('action', 'action_dummy')
        cy.addConversationEventFilter('intent', 'intent_dummy')
        cy.dataCy('intents-actions-filter').find('.and-or-order').click().find('div').contains('And').click()
        cy.dataCy('apply-filters').click()
        cy.dataCy('id-filter').find('input').should('have.value', 'test')

        // navigate away from the page and back to check that the filters can be laoded from redux
        cy.dataCy('dialogue-sidebar-link').click({ force: true })
        cy.dataCy('story-group-menu-item').should('exist')
        cy.dataCy('incoming-sidebar-link').click({ force: true })
        cy.dataCy('conversations').click()
        
        // check the filters kept their values
        cy.dataCy('id-filter').find('input').should('have.value', 'test')
        cy.dataCy('date-picker-container').find('.button').contains('01/10/2019 - 30/11/2019').should('exist')
        cy.dataCy('duration-filter-to').find('input').should('have.value', '10')
        cy.dataCy('length-filter').find('input').should('have.value', '2')
        cy.dataCy('length-filter').find('div.text').should('have.text', 'â‰¤')
        cy.dataCy('confidence-filter').find('input').should('have.value', '50')
        
        cy.dataCy('sequence-container').should('include.text', 'action_dummyintent_dummy')
        cy.get('.and-or-order').find('div.text').should('have.text', 'And')
    })
})
